==========================================
ATSEN PROJECT - INSTALLATION INSTRUCTIONS
==========================================

Project: ATSEN (Academic Technology System for Educational Networks)
Repository: [Your GitHub Repo URL]

==========================================
PREREQUISITES
==========================================

1. Node.js (v18 or higher)
   Download: https://nodejs.org/
   Verify: node --version && npm --version

2. Git
   Download: https://git-scm.com/
   Verify: git --version

3. MongoDB Atlas Account (for cloud database)
   Sign up: https://www.mongodb.com/atlas/database
   Create free M0 cluster

==========================================
CLONE AND SETUP
==========================================

1. Clone the repository:
   git clone [YOUR_GITHUB_REPO_URL]
   cd ATSEN

2. Install Backend Dependencies:
   cd backend
   npm install

3. Install Frontend Dependencies:
   cd ../frontend
   npm install

==========================================
BACKEND SETUP
==========================================

1. Navigate to backend folder:
   cd backend

2. Create .env file:
   touch .env

3. Add environment variables to .env:
   PORT=5001
   MONGO_URI=mongodb+srv://YOUR_USERNAME:YOUR_PASSWORD@YOUR_CLUSTER.mongodb.net/atsen?retryWrites=true&w=majority
   ADMIN_SECRET=change-this

   Replace:
   - YOUR_USERNAME: MongoDB Atlas username
   - YOUR_PASSWORD: MongoDB Atlas password (URL-encoded if special chars)
   - YOUR_CLUSTER: Your Atlas cluster hostname

4. Verify MongoDB Atlas setup:
   - Network Access: Add your IP or 0.0.0.0/0 for development
   - Database Access: Create user with read/write permissions
   - Get connection string from Atlas dashboard

==========================================
FRONTEND SETUP
==========================================

1. Navigate to frontend folder:
   cd frontend

2. Create .env file:
   touch .env

3. Add environment variables to .env:
   VITE_API_URL=http://localhost:5001
   VITE_ADMIN_KEY=change-this

==========================================
DEPENDENCIES OVERVIEW
==========================================

Backend Dependencies (/backend/package.json):
   - express: Web framework
   - mongoose: MongoDB ODM
   - cors: Cross-origin resource sharing
   - dotenv: Environment variables
   - @upstash/ratelimit: Rate limiting (optional)
   - @upstash/redis: Redis client (optional)
   - nodemon: Development server (dev dependency)
   - concurrently: Run multiple commands (dev dependency)

Frontend Dependencies (/frontend/package.json):
   - react: UI library
   - react-dom: React DOM rendering
   - react-router: Client-side routing
   - react-hot-toast: Toast notifications
   - framer-motion: Animations
   - vite: Build tool and dev server
   - tailwindcss: CSS framework
   - daisyui: Tailwind component library
   - autoprefixer: CSS vendor prefixes
   - postcss: CSS processing

==========================================
RUNNING THE PROJECT
==========================================

Option 1: Run Both Together (Recommended)
   cd backend
   npm run dev:all

Option 2: Run Separately
   Terminal 1 (Backend):
   cd backend
   npm run dev

   Terminal 2 (Frontend):
   cd frontend
   npm run dev

==========================================
VERIFY INSTALLATION
==========================================

1. Backend should show:
   "MONGODB CONNECTED SUCCESSFULLY!"
   "Server started on PORT: 5001"

2. Frontend should show:
   Vite dev server running on http://localhost:5173

3. Open browser:
   http://localhost:5173/yuvraj/announcements

4. Test API:
   curl http://localhost:5001/api/yuvraj/announcements

==========================================
TROUBLESHOOTING
==========================================

1. "Module not found" errors:
   - Run npm install in both backend and frontend folders
   - Check Node.js version (v18+)

2. MongoDB connection failed:
   - Verify MONGO_URI in backend/.env
   - Check Atlas Network Access allows your IP
   - URL-encode password if it contains special characters

3. Frontend can't connect to backend:
   - Ensure backend is running on port 5001
   - Check VITE_API_URL in frontend/.env
   - Verify CORS is enabled in backend

4. Port already in use:
   - Kill process using port: lsof -ti:5001 | xargs kill
   - Or change PORT in backend/.env

5. Permission errors:
   - Use sudo for global npm installs if needed
   - Check file permissions in project folders

==========================================
DEVELOPMENT WORKFLOW
==========================================

1. Start development:
   cd backend && npm run dev:all

2. Make changes to code
   - Backend: Auto-restart with nodemon
   - Frontend: Hot reload with Vite

3. Test features:
   - List page: http://localhost:5173/yuvraj/announcements
   - Set admin role in browser console for create/edit

4. Stop development:
   Ctrl+C in terminal

==========================================
PRODUCTION DEPLOYMENT
==========================================

1. Backend Deployment (Render/Railway/Fly.io):
   - Set environment variables
   - Build command: npm install
   - Start command: npm start

2. Frontend Deployment (Vercel/Netlify):
   - Build command: npm run build
   - Output directory: dist
   - Set VITE_API_URL to deployed backend URL

==========================================
FEATURE MODULES
==========================================

Current Features:
- Yuvraj: Announcements system (list, detail, admin create/edit)
- [Other team members' features will be listed here]

==========================================
SUPPORT
==========================================

For issues:
1. Check troubleshooting section above
2. Verify all dependencies are installed
3. Check environment variables are set correctly
4. Ensure MongoDB Atlas is accessible

==========================================
